#!/bin/bash

# Actualizar lista de paquetes
sudo apt update

# Instalar paquete de idioma español
sudo apt install -y language-pack-es

# Configurar idioma del sistema
sudo update-locale LANG=es_AR.UTF-8

# Actualizar sistema
sudo apt full-upgrade -y

# Eliminar paquetes no necesarios
sudo apt autoremove -y

# Limpiar caché
sudo apt clean

echo "El sistema ha sido actualizado y configurado en español latinoamericano de Argentina."

opcion=""

while [ "$opcion" != "q" ]; do
    echo
    echo "    Menú de opciones:"
    echo
    echo "1) Configurar mi terminal"
    echo "2) Instalar Herramientas"
    echo "3) Instalar Docker"
    echo "4) Instalar Docker-compose"
    echo "5) Instalar Portainer"
    echo "q) Salir"
    echo
    read -p "Elige una opción: " opcion
    echo

    case "$opcion" in
        1)
            # Configurando mi terminal
            mkdir -p "$HOME/.baulera"
            cp -R .bash_aliases "$HOME"
            source "$HOME/.bash_aliases"
            cp -R .bashrc "$HOME"
            source "$HOME/.bashrc"
            cp -R mis-scripts "$HOME/.baulera/mis-scripts"
            chmod -R +x "$HOME/.baulera/mis-scripts"
            source "$HOME/.bashrc"
            source "$HOME/.bash_aliases"
            clear
            echo "  Terminal Configurada"
            ;;
        2)
            tools=(
                "neofetch"
                "btop"
                "wget"
                "curl"
                "cmatrix"
                "hollywood"
                "man"
                "manpages-es"
                "zip"
                "exa"
                "python3" 
                "python3-pip" 
                "python3-venv" 
                "python3-dev"
            )

            # Función para mostrar barra de progreso
            show_progress() {
                local elapsed=$1
                local total=$2
                local progress=$((elapsed * 100 / total))
                printf "[%-100s] %d%%\r" "$bar" "$progress"
            }

            # Instalar herramientas
            for tool in "${tools[@]}"; do
                echo "Instalando $tool..."
                bar="PROGRESO AL: "
                length=${#bar}
                count=0
                sudo apt install "$tool" -y > /dev/null 2>&1 &
                pid=$!
                while kill -0 $pid 2>/dev/null; do
                    show_progress $count $length
                    sleep 0.1
                    count=$((count+1))
                done
                wait $pid
                show_progress $length $length
                echo ""
                if [ $? -eq 0 ]; then
                    echo "$tool se ha instalado correctamente."
                else
                    echo "Error al instalar $tool. ¡Abortando!"
                    exit 1
                fi
            done

            echo "Herramientas instaladas"
            ;;

        3)
            # Instalar Docker
            echo "Instalando Docker..."
            sudo apt-get update
            curl -sSl https://get.docker.com |sh
            sudo groupadd docker
            sudo usermod -aG docker $USER
            sudo reboot

            ;;
        4)
            #docker compose
            sudo apt install -y libffi-dev libssl-dev python-pip
            sudo pip3 install docker-compose
            sudo reboot
            ;;
        5)
            #Instalando Portainer
            echo "Creando el archivo docker-compose.yml para Portainer..."
            cat <<EOF > "$HOME/docker-compose.yml"
            version: '3'
            services:
                portainer:
                    container_name: portainer
                    image: portainer/portainer-ce:linux-arm64-2.19.4
                    ports:
                        - "9000:9000"
                    volumes:
                        - "$HOME/.docker_config/portainer/docker.sock:/var/run/docker.sock"
                        - "$HOME/.docker_config/portainer/portainer_data:/data"
            volumes:
                portainer_data:
EOF
            echo "Iniciando Portainer con Docker Compose..."
            docker-compose -f "$HOME/docker-compose.yml" up -d
            if [ $? -eq 0 ]; then
                echo "¡Listo! Portainer se ha instalado y está en funcionamiento."
            else
                echo "Error al iniciar Portainer con Docker Compose."
                exit 1
            fi
            ;;
        q)
            read -p "¿Desea reiniciar automáticamente el servidor? (si/no): " reiniciar_automaticamente
            if [ "$reiniciar_automaticamente" == "si" ]; then
                sudo reboot
            else
                clear
                echo "Reinicia manualmente cuando quieras con el comando -sudo reboot-"
                break
            fi
            ;;
        *)
            echo "Opción inválida."
            ;;
    esac
done          
            
            